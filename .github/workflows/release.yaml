name: Release
on:
  push:
    tags:
      - 'v*.*.*'
  release:
    types: [created]
    tags:
      - 'v*.*.*'
jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      IMAGE_NAME: autoinstrumentation-go
    steps:
      - uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Log in to the Container registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.6.1

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5.5.1
        with:
          images: |
            otel/${{ env.IMAGE_NAME }}
            ghcr.io/${{ github.repository }}/${{ env.IMAGE_NAME }}

      - name: Build and push
        uses: docker/build-push-action@v6.6.1
        with:
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
  build-and-push-binary:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    env:
      BINARY_NAME: otel-go-instrumentation
    steps:
      - uses: actions/checkout@v4

      # - name: Download build artifact
      #   uses: actions/download-artifact@v4
      #   with:
      #     name: otel-go-instrumentation
      #     path: ./otel-go-instrumentation
      #     run-id: ${{ github.run_id }}
      #     github-token: ${{ secrets.GITHUB_TOKEN }}
      - name: Retrieve binary from cache
        uses: actions/cache@v4
        with:
          path: ./otel-go-instrumentation
          key: ${{ github.sha }}-otel-go-instrumentation
      - name: Display structure of downloaded files
        run: ls -R
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
          allow_update: true
        
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./otel-go-instrumentation
          asset_name: otel-go-instrumentation
          asset_content_type: application/octet-stream